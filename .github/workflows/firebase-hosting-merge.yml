name: Deploy to Firebase Hosting on merge
on:
  push:
    branches: [main]

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    env:
      FIREBASE_CLI_EXPERIMENTS: webframeworks
      CI: true
      NO_COLOR: 1
      TERM: dumb
      # Variáveis públicas do Next (se usar)
      NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
      NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
      NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
      NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js (20.x)
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      # (OPCIONAL) testes/lint aqui se quiser
      # - run: npm ci && npm test

      # >>> Opção 1: setar a política de limpeza ANTES do deploy <<<
      - name: Set Artifact Registry cleanup policy (us-east1/gcf-artifacts)
        run: |
          echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_BARBER_APP_FRONTEND }}' > ${HOME}/gcp.json
          export GOOGLE_APPLICATION_CREDENTIALS="${HOME}/gcp.json"

          npx firebase-tools@13.28.0 functions:artifacts:setpolicy \
            --location us-east1 \
            --repository gcf-artifacts \
            --retention 30d \
            --keep 5 \
            --delete-untagged \
            --non-interactive \
            --project barber-app-frontend

      - name: Deploy to Firebase Hosting (prod)
        uses: FirebaseExtended/action-hosting-deploy@v1
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_BARBER_APP_FRONTEND }}
          projectId: barber-app-frontend
          channelId: live
        env:
          FIREBASE_CLI_EXPERIMENTS: webframeworks
          CI: true
          NO_COLOR: 1
          TERM: dumb
