name: Deploy to Firebase Hosting on merge
on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    env:
      FIREBASE_CLI_EXPERIMENTS: webframeworks
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Detect project directory (where package.json lives)
        id: detect
        run: |
          # procura o primeiro package.json fora de .github e node_modules
          PROJECT_JSON=$(find . -maxdepth 3 -type f -name package.json ! -path "./.github/*" ! -path "./node_modules/*" | head -n 1 || true)
          if [ -z "$PROJECT_JSON" ]; then
            echo "No package.json found, using repo root"
            echo "PROJECT_DIR=." >> $GITHUB_ENV
          else
            PROJECT_DIR=$(dirname "$PROJECT_JSON")
            echo "Found package.json in: $PROJECT_DIR"
            echo "PROJECT_DIR=$PROJECT_DIR" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Install dependencies & Build (in detected project dir)
        run: |
          echo "Building in $PROJECT_DIR"
          # instala e builda no diretório detectado
          cd "$PROJECT_DIR"
          npm ci
          npm run build
        # usa o working-directory das runs só por clareza; já mudamos com cd
        shell: bash

      - name: Copy build artifacts to repository root (so firebase action can find them)
        run: |
          echo "PROJECT_DIR is $PROJECT_DIR"
          # se houver .next (Next.js), copia para a raiz
          if [ -d "$PROJECT_DIR/.next" ]; then
            rsync -a "$PROJECT_DIR/.next" ./.next
          fi
          # se houver pasta out (next export), copia também
          if [ -d "$PROJECT_DIR/out" ]; then
            rsync -a "$PROJECT_DIR/out" ./out
          fi
          # copie também public/static se necessário
          if [ -d "$PROJECT_DIR/public" ]; then
            rsync -a "$PROJECT_DIR/public" ./public
          fi
          # opcional: listar para debugging
          echo "Root folder after copy:"
          ls -la
          [ -d .next ] && echo ".next exists at root (good)" || echo ".next not found at root"
        shell: bash

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_BARBER_APP_FRONTEND }}
          channelId: live
          projectId: barber-app-frontend
