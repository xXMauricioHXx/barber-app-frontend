name: Deploy to Firebase Hosting on merge
on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    env:
      FIREBASE_CLI_EXPERIMENTS: webframeworks
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js (use Node 20 so firebase-tools is compatible)
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Detect project directory (where package.json lives)
        id: detect
        run: |
          PROJECT_JSON=$(find . -maxdepth 3 -type f -name package.json ! -path "./.github/*" ! -path "./node_modules/*" | head -n 1 || true)
          if [ -z "$PROJECT_JSON" ]; then
            echo "PROJECT_DIR=." >> $GITHUB_ENV
          else
            PROJECT_DIR=$(dirname "$PROJECT_JSON")
            echo "PROJECT_DIR=$PROJECT_DIR" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Provide Firebase public config (for client SDK)
        env:
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
        run: |
          echo "NEXT_PUBLIC_FIREBASE_API_KEY=$NEXT_PUBLIC_FIREBASE_API_KEY" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=$NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_FIREBASE_PROJECT_ID=$NEXT_PUBLIC_FIREBASE_PROJECT_ID" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_FIREBASE_APP_ID=$NEXT_PUBLIC_FIREBASE_APP_ID" >> $GITHUB_ENV

      - name: Install dependencies & Build (in detected project dir)
        run: |
          echo "Building in $PROJECT_DIR"
          cd "$PROJECT_DIR"
          npm ci
          npm run build
        shell: bash

      - name: Copy build artifacts to repository root (so firebase action can find them)
        run: |
          if [ -d "$PROJECT_DIR/.next" ]; then rsync -a "$PROJECT_DIR/.next" ./.next; fi
          if [ -d "$PROJECT_DIR/out" ]; then rsync -a "$PROJECT_DIR/out" ./out; fi
          if [ -d "$PROJECT_DIR/public" ]; then rsync -a "$PROJECT_DIR/public" ./public; fi
          ls -la
        shell: bash

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_BARBER_APP_FRONTEND }}
          channelId: live
          projectId: barber-app-frontend
